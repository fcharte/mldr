% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evmetrics_av.R
\name{Averaged metrics}
\alias{Averaged metrics}
\alias{accuracy}
\alias{recall}
\alias{precision}
\alias{Fmeasure}
\alias{microRecall}
\alias{microPrecision}
\alias{macroRecall}
\alias{macroPrecision}
\alias{microFmeasure}
\alias{macroFmeasure}
\title{Multi-label averaged evaluation metrics}
\usage{
accuracy(trueLabels, predictedLabels, ...)

recall(trueLabels, predictedLabels, undefinedValue = "diagnose")

precision(trueLabels, predictedLabels, undefinedValue = "diagnose")

Fmeasure(trueLabels, predictedLabels, ...)

microRecall(trueLabels, predictedLabels, ...)

microPrecision(trueLabels, predictedLabels, ...)

macroRecall(trueLabels, predictedLabels, undefinedValue = "diagnose")

macroPrecision(trueLabels, predictedLabels, undefinedValue = "diagnose")

microFmeasure(trueLabels, predictedLabels, ...)

macroFmeasure(trueLabels, predictedLabels, ...)
}
\arguments{
\item{trueLabels}{Matrix of true labels, columns corresponding to labels and
rows to instances.}

\item{predictedLabels}{Matrix of predicted labels, columns corresponding to
labels and rows to instances.}

\item{...}{Additional parameters for precision, recall and Fmeasure}

\item{undefinedValue}{The value to be returned when a computation results in
an undefined value due to a division by zero. See details.}
}
\value{
Resulting value in the range [0, 1]
}
\description{
Evaluation metrics based on simple metrics for the confusion
 matrix, averaged through several criteria.
}
\details{
\strong{Deciding a value when denominators are zero}

Parameter \code{undefinedValue}: The value to be returned when a computation
results in an undefined value due to a division by zero. Can be a single
value (e.g. NA, 0), a function with the following signature:

\code{function(tp, fp, tn, fn)}

or a string corresponding to one of the predefined strategies. These are:
\itemize{
 \item \code{"diagnose"}: This strategy performs the following decision:
 \itemize{
  \item Returns 1 if there are no true labels and none were predicted
  \item Returns 0 otherwise
 }
 This is the default strategy, and the one followed by MULAN.
 \item \code{"ignore"}: Occurrences of undefined values will be ignored when
 averaging (averages will be computed with potentially less values than
 instances/labels). Undefined values in micro-averaged metrics cannot be
 ignored (will return \code{NA}).
 \item \code{"na"}: Will return \code{NA} (with class \code{numeric}) and it
 will be propagated when averaging (averaged metrics will potentially return
 \code{NA}).
}
}
\examples{
trueLabels <- matrix(c(
1,1,1,
0,0,0,
1,0,0,
1,1,1,
0,0,0,
1,0,0
), ncol = 3, byrow = TRUE)
predictedLabels <- matrix(c(
1,1,1,
0,0,0,
1,0,0,
1,1,0,
1,0,0,
0,1,0
), ncol = 3, byrow = TRUE)

precision(trueLabels, predictedLabels, undefinedValue = "diagnose")
macroRecall(trueLabels, predictedLabels, undefinedValue = 0)
macroFmeasure(
  trueLabels, predictedLabels,
  undefinedValue = function(tp, fp, tn, fn) as.numeric(fp == 0 && fn == 0)
)
}
